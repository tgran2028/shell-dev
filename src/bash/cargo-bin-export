#!/usr/bin/env bash
#
# export installed cargo binaries as JSON
set -euo pipefail
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if ! command -v cargo &> /dev/null; then
  if [[ -x $HOME/.cargo/bin/cargo ]]; then
    [[ -r $HOME/.cargo/env ]] && source "$HOME/.cargo/env"
    CMD=$HOME/.cargo/bin/cargo
  else
    echo "cargo not found"
    exit 1
  fi
else
  CMD=cargo
fi
[[ -n $CMD ]] || exit 1
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
source /etc/os-release
[[ -n $PRETTY_NAME ]] || PRETTY_NAME=$(uname -s)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# iterate over each line, split by space to get name and version
# create a JSON object using jq
# collect all JSON objects into an array of installed crates
# return object with metadata and array of installed crates
exec "$CMD" install --list | grep ':$' | sed 's/://g' | while read -r line; do
  # name of crate
  name=$(cut -d ' ' -f 1 <<< "$line")
  # version of crate
  version=$(cut -d ' ' -f 2 <<< "$line")
  # description of crate
  desc=$(exec "$CMD" search "$name" 2>&1 | grep -n "^$name =" | cut -d'#' -f2 | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
  # create JSON object for create
  jq -n --arg name "$name" --arg version "$version" --arg desc "$desc" \
  '{
      name: $name,
      version: $version,
      description: $desc
  }'
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# collect all JSON objects into an array. Add metadata.
done | jq -s -M -c \
  --arg date "$(date -u +"%Y-%m-%dT%H:%M:%SZ")" \
  --arg desc "Installed cargo binaries" \
  --arg user "$USER" \
  --arg host "$(hostname)" \
  --arg os "$PRETTY_NAME" \
  --arg cargo_version "$(exec "$CMD" --version)" \
  '{
      date: $date,
      description: $desc,
      user: $user,
      host: $host,
      os: $os,
      cargo_version: $cargo_version,
      binaries: .
  }' | tee "${CARGO_HOME:-$HOME/.cargo}/.cargo-bin-export.json"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
