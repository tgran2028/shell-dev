{"version":3,"sources":["script.js"],"names":[],"mappings":";;;;AAEA,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;AACzB,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAM,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAErC,IAAM,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,IAAM,IAAI,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AAChC,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACtC,IAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;eACjB,OAAO,CAAC,UAAU,CAAC;;IAA/B,OAAO,YAAP,OAAO;;gBACa,OAAO,CAAC,eAAe,CAAC;;IAA5C,QAAQ,aAAR,QAAQ;IAAE,KAAK,aAAL,KAAK;;gBACK,OAAO,CAAC,UAAU,CAAC;;IAAvC,eAAe,aAAf,eAAe;;gBACP,OAAO,CAAC,MAAM,CAAC;;IAAvB,GAAG,aAAH,GAAG;;;;;;;;AAQX,SAAS,WAAW,CAAC,GAAG,EAAE;AACxB,SAAO,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjD,OAAG,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC5B,WAAO,GAAG,CAAC;GACZ,EAAE,EAAE,CAAC,CAAC;CACR;;;AAID,IAAM,eAAe,GAAG;AACtB,QAAM,EAAE,MAAM;AACd,YAAU,EAAE,GAAG;AACf,UAAQ,EAAE,CAAC;AACX,aAAW,EAAE,IAAI;AACjB,eAAa,EAAE,KAAK;AACpB,gBAAc,EAAE,IAAI;AACpB,MAAI,EAAE,KAAK;CACZ,CAAC;;AAEF,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AACtD,QAAM,CAAC,MAAM,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;CACzC,CAAC,CAAC;;AAGH,SAAS,cAAc,CAAC,OAAO,EAAE;AAC/B,SAAO,OAAO,CACX,IAAI,CAAC,UAAC,IAAI;WAAK,CAAC,IAAI,EAAE,IAAI,CAAC;GAAA,CAAC,SACvB,CAAC,UAAC,GAAG;WAAK,CAAC,GAAG,CAAC;GAAA,CAAC,CAAC;CAC1B,CAAC","file":"script-compiled.js","sourcesContent":["#!/usr/bin/env node\n// get fs\nconst fs = require('fs');\nconst path = require('path');\nconst program = require('commander');\n// Removed: const chalk = require('chalk');\nconst shell = require('shelljs');\nconst inquirer = require('inquirer');\nconst yaml = require('js-yaml');\nconst json = require('json');\nconst jsonc = require('jsonc-parser');\nconst prettier = require('prettier');\nconst { Options } = require('prettier');\nconst { execSync, spawn } = require('child_process');\nconst { createInterface } = require('readline');\nconst { get } = require('http');\n\n/**\n * Convert environment to object\n * \n * @param {object} env \n * @returns {object} \n */\nfunction envToObject(env) {\n  return Object.keys(env || {}).reduce((acc, key) => {\n    acc[key] = process.env[key];\n    return acc;\n  }, {});\n}\n\n\n// Create prettier options obj\nconst prettierOptions = {\n  parser: 'json',\n  printWidth: 120,\n  tabWidth: 2,\n  singleQuote: true,\n  trailingComma: 'all',\n  bracketSpacing: true,\n  semi: false,\n};\n\nprettier.resolveConfig(process.cwd()).then((options) => {\n  Object.assign(prettierOptions, options);\n});\n\n\nfunction resolvePromise(promise) {\n  return promise\n    .then((data) => [null, data])\n    .catch((err) => [err]);\n};\n\n\n\n"]}